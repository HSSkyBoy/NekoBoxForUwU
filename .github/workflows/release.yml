name: Release Build
on:
  workflow_dispatch:
    inputs:
      tag:
        description: "Release Tag"
        required: true
      publish:
        description: "Publish to GitHub Release"
        type: boolean
        required: false
        default: false

jobs:
  libcore:
    name: Native Build (LibCore)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt'
          java-version: '17'
      - name: Install Golang
        uses: actions/setup-go@v5
        with:
          go-version: ^1.24
      - name: Native Build
        run: ./run lib core
      - name: Upload Libcore Artifact
        uses: actions/upload-artifact@v4
        with:
          name: libcore-aar
          path: app/libs/libcore.aar

  build:
    name: Build OSS APK
    runs-on: ubuntu-latest
    needs:
      - libcore
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Download Libcore Artifact
        uses: actions/download-artifact@v4
        with:
          name: libcore-aar
          path: app/libs
      - name: Gradle cache
        uses: actions/cache@v4
        with:
          path: ~/.gradle
          key: gradle-oss-${{ hashFiles('**/*.gradle.kts') }}
      - name: Set up keystore and properties
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
        run: |
          echo "sdk.dir=${ANDROID_HOME}" > local.properties
          echo "ndk.dir=${ANDROID_HOME}/ndk/25.0.8775105" >> local.properties
          echo "${{ secrets.LOCAL_PROPERTIES }}" >> local.properties
          echo "storeFile=signing.jks" >> local.properties
          echo "$KEYSTORE_BASE64" | base64 --decode > app/signing.jks
      - name: Gradle Build
        env:
          BUILD_PLUGIN: none
        run: |
          ./run init action gradle
          ./gradlew app:assembleOssRelease
          APK=$(find app/build/outputs/apk -name '*arm64-v8a*.apk')
          APK=$(dirname $APK)
          echo "APK=$APK" >> $GITHUB_ENV
      - name: Upload APKs
        uses: actions/upload-artifact@v4
        with:
          name: APKs
          path: ${{ env.APK }}
  
  publish:
    name: Publish Release
    if: github.event.inputs.publish
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download APKs
        uses: actions/download-artifact@v4
        with:
          name: APKs
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./APKs/*.apk
          asset_name: ${{ github.event.inputs.tag }}_oss.apk
          asset_content_type: application/vnd.android.package-archive